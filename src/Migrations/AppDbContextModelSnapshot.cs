// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using src.Models.CodeFirst;

#nullable disable

namespace src.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("src.Models.CodeFirst.condicion_pago", b =>
                {
                    b.Property<short>("id_condicion_pago")
                        .HasColumnType("smallint");

                    b.Property<short>("dias_pago")
                        .HasColumnType("smallint");

                    b.HasKey("id_condicion_pago")
                        .HasName("condicion_pago_pkey");

                    b.ToTable("condicion_pago", (string)null);
                });

            modelBuilder.Entity("src.Models.CodeFirst.contado", b =>
                {
                    b.Property<short>("id_condicion_pago")
                        .HasColumnType("smallint");

                    b.Property<short>("dias_pago")
                        .HasColumnType("smallint");

                    b.HasKey("id_condicion_pago")
                        .HasName("contado_pkey");

                    b.ToTable("contado", (string)null);
                });

            modelBuilder.Entity("src.Models.CodeFirst.cuota", b =>
                {
                    b.Property<short>("id_condicion_pago")
                        .HasColumnType("smallint");

                    b.Property<short>("cuotas")
                        .HasColumnType("smallint");

                    b.Property<short>("dias_pago")
                        .HasColumnType("smallint");

                    b.Property<short>("interes_porcentual")
                        .HasColumnType("smallint");

                    b.HasKey("id_condicion_pago")
                        .HasName("cuotas_pkey");

                    b.ToTable("cuotas");
                });

            modelBuilder.Entity("src.Models.CodeFirst.direccion", b =>
                {
                    b.Property<short>("id_direccion")
                        .HasColumnType("smallint");

                    b.Property<string>("calle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("comentario")
                        .HasColumnType("text");

                    b.Property<short>("id_provincia")
                        .HasColumnType("smallint");

                    b.Property<short>("numero")
                        .HasColumnType("smallint");

                    b.Property<short?>("piso")
                        .HasColumnType("smallint");

                    b.HasKey("id_direccion")
                        .HasName("direccion_pkey");

                    b.HasIndex("id_provincia");

                    b.ToTable("direccion", (string)null);
                });

            modelBuilder.Entity("src.Models.CodeFirst.proveedor", b =>
                {
                    b.Property<short>("id_proveedor")
                        .HasColumnType("smallint");

                    b.Property<bool>("activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("cuit")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.Property<string>("domicilio")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<short>("id_condicion_pago_habitual")
                        .HasColumnType("smallint");

                    b.Property<short>("id_direccion")
                        .HasColumnType("smallint");

                    b.Property<string>("persona_responsable")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<string>("razon_social")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<string>("saldo")
                        .IsRequired()
                        .HasColumnType("character varying");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)");

                    b.HasKey("id_proveedor")
                        .HasName("proveedor_pkey");

                    b.HasIndex("id_condicion_pago_habitual");

                    b.HasIndex("id_direccion");

                    b.HasIndex(new[] { "cuit" }, "unq_cuit")
                        .IsUnique();

                    b.HasIndex(new[] { "razon_social" }, "unq_razon")
                        .IsUnique();

                    b.ToTable("proveedor", (string)null);
                });

            modelBuilder.Entity("src.Models.CodeFirst.provincium", b =>
                {
                    b.Property<short>("id_provincia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<short>("id_provincia"));

                    b.Property<string>("provincia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("id_provincia")
                        .HasName("provincia_pkey");

                    b.HasIndex(new[] { "provincia" }, "unq_prov")
                        .IsUnique();

                    b.ToTable("provincia");
                });

            modelBuilder.Entity("src.Models.CodeFirst.direccion", b =>
                {
                    b.HasOne("src.Models.CodeFirst.provincium", "id_provinciaNavigation")
                        .WithMany("direccions")
                        .HasForeignKey("id_provincia")
                        .IsRequired()
                        .HasConstraintName("direccion_id_provincia_fkey");

                    b.Navigation("id_provinciaNavigation");
                });

            modelBuilder.Entity("src.Models.CodeFirst.proveedor", b =>
                {
                    b.HasOne("src.Models.CodeFirst.condicion_pago", "id_condicion_pago_habitualNavigation")
                        .WithMany("proveedors")
                        .HasForeignKey("id_condicion_pago_habitual")
                        .IsRequired()
                        .HasConstraintName("proveedor_id_condicion_pago_habitual_fkey");

                    b.HasOne("src.Models.CodeFirst.direccion", "id_direccionNavigation")
                        .WithMany("proveedors")
                        .HasForeignKey("id_direccion")
                        .IsRequired()
                        .HasConstraintName("proveedor_id_direccion_fkey");

                    b.Navigation("id_condicion_pago_habitualNavigation");

                    b.Navigation("id_direccionNavigation");
                });

            modelBuilder.Entity("src.Models.CodeFirst.condicion_pago", b =>
                {
                    b.Navigation("proveedors");
                });

            modelBuilder.Entity("src.Models.CodeFirst.direccion", b =>
                {
                    b.Navigation("proveedors");
                });

            modelBuilder.Entity("src.Models.CodeFirst.provincium", b =>
                {
                    b.Navigation("direccions");
                });
#pragma warning restore 612, 618
        }
    }
}
